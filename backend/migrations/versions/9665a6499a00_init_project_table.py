"""init project table

Revision ID: 9665a6499a00
Revises: 
Create Date: 2025-10-05 18:15:09.955134

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9665a6499a00'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authentication',
    sa.Column('token', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('token')
    )
    op.create_table('tenant',
    sa.Column('tenant_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('tenant_id')
    )
    op.create_table('account',
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_index(op.f('ix_account_email'), 'account', ['email'], unique=True)
    op.create_index(op.f('ix_account_username'), 'account', ['username'], unique=True)
    op.create_table('workspace',
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['account.account_id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['account.account_id'], ),
    sa.PrimaryKeyConstraint('workspace_id'),
    sa.UniqueConstraint('tenant_id', 'name', name='uq_workspace_tenant_name')
    )
    op.create_table('group',
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['account.account_id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['account.account_id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspace.workspace_id'], ),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('workspace_id', 'name', name='uq_group_workspace_name')
    )
    op.create_index('group_workspace_id_idx', 'group', ['workspace_id'], unique=False)
    op.create_table('task',
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assigned_to_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['account.account_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['account.account_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['account.account_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index('task_group_id_idx', 'task', ['group_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('task_group_id_idx', table_name='task')
    op.drop_table('task')
    op.drop_index('group_workspace_id_idx', table_name='group')
    op.drop_table('group')
    op.drop_table('workspace')
    op.drop_index(op.f('ix_account_username'), table_name='account')
    op.drop_index(op.f('ix_account_email'), table_name='account')
    op.drop_table('account')
    op.drop_table('tenant')
    op.drop_table('authentication')
    # ### end Alembic commands ###
